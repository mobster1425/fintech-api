name: Deploy to production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.3'
      id: install

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Configure AWS credentials (iam credentials same with kops ec2 instance one)
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Create kubeconfig directory and file if they don't exist
      run: mkdir -p ~/.kube && touch ~/.kube/config

    - name: Load kubeconfig from GitHub Secrets
      run: echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

    - name: Load secrets and save to app.env
      run: aws secretsmanager get-secret-value --secret-id digital-wallet-secret --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker image
      run: docker build -t feyin/digital-wallet-api:latest .

    - name: Push Docker image to Docker Hub
      run: docker push feyin/digital-wallet-api:latest

    - name: Deploy image to kops on ec2
      run: |
        kubectl apply -f kubernates/app-secret.yml
        kubectl apply -f kubernates/walletapi-Service.yml
        kubectl apply -f kubernates/walletapidep.yml
        kubectl apply -f kubernates/walletdb-CIP.yml  
        kubectl apply -f kubernates/walletdbdep.yml
        kubectl apply -f kubernates/walletredis-CIP.yml
        kubectl apply -f kubernates/walletredisdep.yml
